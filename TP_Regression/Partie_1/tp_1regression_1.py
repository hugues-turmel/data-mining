# -*- coding: utf-8 -*-
"""TP_1Regression_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rjLSiUAKD7x-faQ5LxXEAecuspoXBNzz
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import os
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.compose import ColumnTransformer

dataset = pd.read_csv('Data.csv')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

print(dataset)
print(X)
print(y)

imputer = SimpleImputer(missing_values = np.nan, strategy = 'mean')
# missing_values = 'NaN' veut dire que les données manquantes sont représentées dans le fichier par la valeur NaN.
#imputer est l’objet de la classe…
imputer.fit(X[:, 1:3])
# axis=0 correspond à la colonne 0.
X[:, 1:3] = imputer.transform(X[:, 1:3])
#il n’y a plus de données manquantes pour les X.

labelencoder_X = LabelEncoder()
X[:, 0] = labelencoder_X.fit_transform(X[:, 0])
onehotencoder = OneHotEncoder(handle_unknown='ignore')
X = onehotencoder.fit_transform(X).toarray()
labelencoder_y = LabelEncoder()
y = labelencoder_y.fit_transform(y)